pipeline {
  agent {
    docker {
        image 'maven:3.8.4-jdk-11' // Maven image with JDK
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // Mount Docker socket for Docker-in-Docker
    }
  }
  environment {
        GIT_REPO = 'https://github.com/edwinbienose/devops-project.git'
        GIT_USER_NAME = "edwinbienose"
        GIT_USER_EMAIL = "edwinbienose512@gmail.com"
        BRANCH_NAME = 'main' // Change if using a different branch
        GIT_CREDENTIALS_ID = 'git-cred' // The ID of the Jenkins credential you created
        GIT_REPO_NAME = 'devops-project'
        NEW_IMAGE_NAME = "edwin512/cicd-project:${BUILD_NUMBER}"
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Install Docker') {
      steps {
        sh '''
          apt-get update
          apt-get install -y docker.io
        '''
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd /var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.191.77.237:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd /var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app  && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "edwin512/cicd-project:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "/var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('dock-cred')
      }
      steps {
        script {
            sh 'cd /var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dock-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update File') {
      
      steps {
          script {
              def BUILD_NUMBER = env.BUILD_NUMBER ?: '1' 
                  sh """
                    echo "Replacing ${BUILD_NUMBER-1} with ${BUILD_NUMBER} in deployment.yml"
                    sed -i 's|image: .*|image: $NEW_IMAGE_NAME|' /var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        
                    # Show updated file content
                    cat /var/lib/jenkins/workspace/CICD/edwin-project/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                   """
                }
            }
    }
    stage('Commit and Push') {
            steps {
                withCredentials([string(credentialsId: 'git-cred', variable: 'GITHUB_TOKEN')]) {
                script {
                    sh '''  
                        # Configure git
                        git config --global --add safe.directory /var/lib/jenkins/workspace/CI-Pipeline
                        git config user.name "${GIT_USER_NAME}"
                        git config user.email "${GIT_USER_EMAIL}"
                        # Add changes to the git index
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        
                        # Commit changes
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                        
                        # Push changes with authentication
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
              }
            }
        }
    }
}
 
